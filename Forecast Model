---------------------------Set Worksheet Context---------------------------

use role roleXXX;
use warehouse whXXX;
use database agero_hol_db;
use schema ml_functions;

---------------------------Exploratory Data Analysis---------------------------

SELECT *
FROM bank_marketing;

---------------------------Visualize Data and Prepare for Forecasting---------------------------

-- Subset to the data we want to train on â€“ and create age bins.
-- Create bins from 18 and under, 18 to 30, 30 to 40, 40 to 50, 50 to 60, 60 and older 
CREATE OR REPLACE TABLE bank_marketing_age_bins AS SELECT
    timestamp,
    client_subscribed,
    euribor_3_month_rate,
    CASE 
        WHEN age <= 40 THEN '40 and under'
        ELSE '40 and up'
    END as age_bin
FROM bank_marketing;


-- Now count subscriptions by day and age group. 
CREATE OR REPLACE VIEW daily_subscriptions AS SELECT 
    timestamp, 
    age_bin,
    AVG(euribor_3_month_rate) as interest_rate,
    SUM(CASE WHEN client_subscribed = TRUE THEN 1 ELSE 0 END) AS subscribed_count 
FROM bank_marketing_age_bins
GROUP BY timestamp, age_bin;


-- View our data for the 40+ category.
select * from daily_subscriptions where age_bin = '40 and up';


-- Split data into data for training and hold out one month for predictions. 
-- Since we are using interest rate to help train the model, we need to provide this variable at prediction time, too. 
CREATE OR REPLACE TABLE forecast_training AS SELECT
    * 
FROM daily_subscriptions 
WHERE  timestamp <= (SELECT MAX(timestamp) - INTERVAL '30 days' FROM daily_subscriptions);


CREATE OR REPLACE TABLE forecast_future_values AS SELECT
    timestamp, 
    age_bin, 
    interest_rate
FROM daily_subscriptions
WHERE timestamp NOT IN (SELECT timestamp FROM forecast_training);


---------------------------Use Snowflake AI & ML Studio---------------------------


--Reference screenshots in the github README.md



SELECT AGE_BIN, TIMESTAMP, SUBSCRIBED_COUNT AS actual, NULL AS forecast, NULL AS lower_bound, NULL AS upper_bound
    FROM FORECAST_TRAINING
    WHERE age_bin = '40 and up' and TIMESTAMP > '2010-02-01'
UNION ALL
SELECT replace(series, '"', '') as AGE_BIN, ts as TIMESTAMP, NULL AS actual, forecast, lower_bound, upper_bound
    FROM <name_of_model>
    where series = '40 and up';

